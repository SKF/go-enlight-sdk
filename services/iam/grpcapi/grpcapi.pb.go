// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpcapi/grpcapi.proto

/*
Package grpcapi is a generated protocol buffer package.

It is generated from these files:
	grpcapi/grpcapi.proto

It has these top-level messages:
	GetHierarchyRelationsInput
	GetHierarchyRelationsOutput
	CheckAuthenticationInput
	GetEventRecordsInput
	GetEventRecordsOutput
	User
	PrimitiveString
	PrimitiveInt32
	PrimitiveBool
	PrimitiveBytes
	PrimitiveVoid
*/
package grpcapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Input & output messages
type GetHierarchyRelationsInput struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetHierarchyRelationsInput) Reset()                    { *m = GetHierarchyRelationsInput{} }
func (m *GetHierarchyRelationsInput) String() string            { return proto.CompactTextString(m) }
func (*GetHierarchyRelationsInput) ProtoMessage()               {}
func (*GetHierarchyRelationsInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetHierarchyRelationsInput) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetHierarchyRelationsOutput struct {
	NodeIds []string `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds" json:"node_ids,omitempty"`
}

func (m *GetHierarchyRelationsOutput) Reset()                    { *m = GetHierarchyRelationsOutput{} }
func (m *GetHierarchyRelationsOutput) String() string            { return proto.CompactTextString(m) }
func (*GetHierarchyRelationsOutput) ProtoMessage()               {}
func (*GetHierarchyRelationsOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetHierarchyRelationsOutput) GetNodeIds() []string {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

type CheckAuthenticationInput struct {
	Token     string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	MethodArn string `protobuf:"bytes,2,opt,name=methodArn" json:"methodArn,omitempty"`
}

func (m *CheckAuthenticationInput) Reset()                    { *m = CheckAuthenticationInput{} }
func (m *CheckAuthenticationInput) String() string            { return proto.CompactTextString(m) }
func (*CheckAuthenticationInput) ProtoMessage()               {}
func (*CheckAuthenticationInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CheckAuthenticationInput) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CheckAuthenticationInput) GetMethodArn() string {
	if m != nil {
		return m.MethodArn
	}
	return ""
}

type GetEventRecordsInput struct {
	Since int64           `protobuf:"varint,1,opt,name=since" json:"since,omitempty"`
	Limit *PrimitiveInt32 `protobuf:"bytes,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *GetEventRecordsInput) Reset()                    { *m = GetEventRecordsInput{} }
func (m *GetEventRecordsInput) String() string            { return proto.CompactTextString(m) }
func (*GetEventRecordsInput) ProtoMessage()               {}
func (*GetEventRecordsInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetEventRecordsInput) GetSince() int64 {
	if m != nil {
		return m.Since
	}
	return 0
}

func (m *GetEventRecordsInput) GetLimit() *PrimitiveInt32 {
	if m != nil {
		return m.Limit
	}
	return nil
}

type GetEventRecordsOutput struct {
	Records []byte `protobuf:"bytes,1,opt,name=records,proto3" json:"records,omitempty"`
}

func (m *GetEventRecordsOutput) Reset()                    { *m = GetEventRecordsOutput{} }
func (m *GetEventRecordsOutput) String() string            { return proto.CompactTextString(m) }
func (*GetEventRecordsOutput) ProtoMessage()               {}
func (*GetEventRecordsOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetEventRecordsOutput) GetRecords() []byte {
	if m != nil {
		return m.Records
	}
	return nil
}

type User struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Email          string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	EulaAgreedDate string `protobuf:"bytes,3,opt,name=eulaAgreedDate" json:"eulaAgreedDate,omitempty"`
	ValidEula      string `protobuf:"bytes,4,opt,name=validEula" json:"validEula,omitempty"`
	Username       string `protobuf:"bytes,5,opt,name=username" json:"username,omitempty"`
	UserStatus     string `protobuf:"bytes,6,opt,name=userStatus" json:"userStatus,omitempty"`
	UserRoles      string `protobuf:"bytes,7,opt,name=userRoles" json:"userRoles,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetEulaAgreedDate() string {
	if m != nil {
		return m.EulaAgreedDate
	}
	return ""
}

func (m *User) GetValidEula() string {
	if m != nil {
		return m.ValidEula
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetUserStatus() string {
	if m != nil {
		return m.UserStatus
	}
	return ""
}

func (m *User) GetUserRoles() string {
	if m != nil {
		return m.UserRoles
	}
	return ""
}

// Primitive types
type PrimitiveString struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *PrimitiveString) Reset()                    { *m = PrimitiveString{} }
func (m *PrimitiveString) String() string            { return proto.CompactTextString(m) }
func (*PrimitiveString) ProtoMessage()               {}
func (*PrimitiveString) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PrimitiveString) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type PrimitiveInt32 struct {
	Value int32 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *PrimitiveInt32) Reset()                    { *m = PrimitiveInt32{} }
func (m *PrimitiveInt32) String() string            { return proto.CompactTextString(m) }
func (*PrimitiveInt32) ProtoMessage()               {}
func (*PrimitiveInt32) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PrimitiveInt32) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type PrimitiveBool struct {
	Value bool `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *PrimitiveBool) Reset()                    { *m = PrimitiveBool{} }
func (m *PrimitiveBool) String() string            { return proto.CompactTextString(m) }
func (*PrimitiveBool) ProtoMessage()               {}
func (*PrimitiveBool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *PrimitiveBool) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type PrimitiveBytes struct {
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *PrimitiveBytes) Reset()                    { *m = PrimitiveBytes{} }
func (m *PrimitiveBytes) String() string            { return proto.CompactTextString(m) }
func (*PrimitiveBytes) ProtoMessage()               {}
func (*PrimitiveBytes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PrimitiveBytes) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PrimitiveVoid struct {
}

func (m *PrimitiveVoid) Reset()                    { *m = PrimitiveVoid{} }
func (m *PrimitiveVoid) String() string            { return proto.CompactTextString(m) }
func (*PrimitiveVoid) ProtoMessage()               {}
func (*PrimitiveVoid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func init() {
	proto.RegisterType((*GetHierarchyRelationsInput)(nil), "grpcapi.GetHierarchyRelationsInput")
	proto.RegisterType((*GetHierarchyRelationsOutput)(nil), "grpcapi.GetHierarchyRelationsOutput")
	proto.RegisterType((*CheckAuthenticationInput)(nil), "grpcapi.CheckAuthenticationInput")
	proto.RegisterType((*GetEventRecordsInput)(nil), "grpcapi.GetEventRecordsInput")
	proto.RegisterType((*GetEventRecordsOutput)(nil), "grpcapi.GetEventRecordsOutput")
	proto.RegisterType((*User)(nil), "grpcapi.User")
	proto.RegisterType((*PrimitiveString)(nil), "grpcapi.PrimitiveString")
	proto.RegisterType((*PrimitiveInt32)(nil), "grpcapi.PrimitiveInt32")
	proto.RegisterType((*PrimitiveBool)(nil), "grpcapi.PrimitiveBool")
	proto.RegisterType((*PrimitiveBytes)(nil), "grpcapi.PrimitiveBytes")
	proto.RegisterType((*PrimitiveVoid)(nil), "grpcapi.PrimitiveVoid")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for IAM service

type IAMClient interface {
	DeepPing(ctx context.Context, in *PrimitiveVoid, opts ...grpc.CallOption) (*PrimitiveString, error)
	CheckAuthentication(ctx context.Context, in *CheckAuthenticationInput, opts ...grpc.CallOption) (*User, error)
	GetHierarchyRelations(ctx context.Context, in *GetHierarchyRelationsInput, opts ...grpc.CallOption) (*GetHierarchyRelationsOutput, error)
	GetEventRecords(ctx context.Context, in *GetEventRecordsInput, opts ...grpc.CallOption) (*GetEventRecordsOutput, error)
	GetEventRecordStream(ctx context.Context, in *PrimitiveVoid, opts ...grpc.CallOption) (IAM_GetEventRecordStreamClient, error)
}

type iAMClient struct {
	cc *grpc.ClientConn
}

func NewIAMClient(cc *grpc.ClientConn) IAMClient {
	return &iAMClient{cc}
}

func (c *iAMClient) DeepPing(ctx context.Context, in *PrimitiveVoid, opts ...grpc.CallOption) (*PrimitiveString, error) {
	out := new(PrimitiveString)
	err := grpc.Invoke(ctx, "/grpcapi.IAM/DeepPing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) CheckAuthentication(ctx context.Context, in *CheckAuthenticationInput, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/grpcapi.IAM/CheckAuthentication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) GetHierarchyRelations(ctx context.Context, in *GetHierarchyRelationsInput, opts ...grpc.CallOption) (*GetHierarchyRelationsOutput, error) {
	out := new(GetHierarchyRelationsOutput)
	err := grpc.Invoke(ctx, "/grpcapi.IAM/GetHierarchyRelations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) GetEventRecords(ctx context.Context, in *GetEventRecordsInput, opts ...grpc.CallOption) (*GetEventRecordsOutput, error) {
	out := new(GetEventRecordsOutput)
	err := grpc.Invoke(ctx, "/grpcapi.IAM/GetEventRecords", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMClient) GetEventRecordStream(ctx context.Context, in *PrimitiveVoid, opts ...grpc.CallOption) (IAM_GetEventRecordStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_IAM_serviceDesc.Streams[0], c.cc, "/grpcapi.IAM/GetEventRecordStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &iAMGetEventRecordStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type IAM_GetEventRecordStreamClient interface {
	Recv() (*PrimitiveBytes, error)
	grpc.ClientStream
}

type iAMGetEventRecordStreamClient struct {
	grpc.ClientStream
}

func (x *iAMGetEventRecordStreamClient) Recv() (*PrimitiveBytes, error) {
	m := new(PrimitiveBytes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for IAM service

type IAMServer interface {
	DeepPing(context.Context, *PrimitiveVoid) (*PrimitiveString, error)
	CheckAuthentication(context.Context, *CheckAuthenticationInput) (*User, error)
	GetHierarchyRelations(context.Context, *GetHierarchyRelationsInput) (*GetHierarchyRelationsOutput, error)
	GetEventRecords(context.Context, *GetEventRecordsInput) (*GetEventRecordsOutput, error)
	GetEventRecordStream(*PrimitiveVoid, IAM_GetEventRecordStreamServer) error
}

func RegisterIAMServer(s *grpc.Server, srv IAMServer) {
	s.RegisterService(&_IAM_serviceDesc, srv)
}

func _IAM_DeepPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrimitiveVoid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).DeepPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.IAM/DeepPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).DeepPing(ctx, req.(*PrimitiveVoid))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_CheckAuthentication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAuthenticationInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).CheckAuthentication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.IAM/CheckAuthentication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).CheckAuthentication(ctx, req.(*CheckAuthenticationInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_GetHierarchyRelations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHierarchyRelationsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).GetHierarchyRelations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.IAM/GetHierarchyRelations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).GetHierarchyRelations(ctx, req.(*GetHierarchyRelationsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_GetEventRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventRecordsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).GetEventRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcapi.IAM/GetEventRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).GetEventRecords(ctx, req.(*GetEventRecordsInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAM_GetEventRecordStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimitiveVoid)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IAMServer).GetEventRecordStream(m, &iAMGetEventRecordStreamServer{stream})
}

type IAM_GetEventRecordStreamServer interface {
	Send(*PrimitiveBytes) error
	grpc.ServerStream
}

type iAMGetEventRecordStreamServer struct {
	grpc.ServerStream
}

func (x *iAMGetEventRecordStreamServer) Send(m *PrimitiveBytes) error {
	return x.ServerStream.SendMsg(m)
}

var _IAM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcapi.IAM",
	HandlerType: (*IAMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeepPing",
			Handler:    _IAM_DeepPing_Handler,
		},
		{
			MethodName: "CheckAuthentication",
			Handler:    _IAM_CheckAuthentication_Handler,
		},
		{
			MethodName: "GetHierarchyRelations",
			Handler:    _IAM_GetHierarchyRelations_Handler,
		},
		{
			MethodName: "GetEventRecords",
			Handler:    _IAM_GetEventRecords_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetEventRecordStream",
			Handler:       _IAM_GetEventRecordStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpcapi/grpcapi.proto",
}

func init() { proto.RegisterFile("grpcapi/grpcapi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 559 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0x8d, 0xeb, 0xa6, 0x49, 0xef, 0xd7, 0x1f, 0x69, 0xbe, 0x96, 0x1a, 0x17, 0xaa, 0x32, 0x94,
	0xd2, 0x0d, 0x01, 0x5a, 0x21, 0xb1, 0x42, 0x4a, 0x68, 0x55, 0x2c, 0x04, 0x54, 0xae, 0x60, 0xc3,
	0xa2, 0x1a, 0x3c, 0x97, 0x64, 0x14, 0x7b, 0x26, 0x1a, 0x8f, 0x23, 0xf5, 0x49, 0x78, 0x29, 0x1e,
	0x0a, 0xcd, 0x38, 0x36, 0xf9, 0x65, 0x95, 0x9c, 0x73, 0xcf, 0x3d, 0xf6, 0xfd, 0x33, 0xec, 0xf7,
	0xf5, 0x28, 0x61, 0x23, 0xf1, 0x72, 0xf2, 0xdb, 0x19, 0x69, 0x65, 0x14, 0x69, 0x4d, 0x20, 0x7d,
	0x03, 0xe1, 0x35, 0x9a, 0x0f, 0x02, 0x35, 0xd3, 0xc9, 0xe0, 0x3e, 0xc6, 0x94, 0x19, 0xa1, 0x64,
	0x1e, 0xc9, 0x51, 0x61, 0xc8, 0x01, 0xb4, 0x8a, 0x1c, 0xf5, 0x9d, 0xe0, 0x81, 0x77, 0xec, 0x9d,
	0x6d, 0xc6, 0x1b, 0x16, 0x46, 0x9c, 0xbe, 0x85, 0xc3, 0xa5, 0x69, 0x5f, 0x0a, 0x63, 0xf3, 0x1e,
	0x42, 0x5b, 0x2a, 0x8e, 0x77, 0x82, 0xe7, 0x81, 0x77, 0xec, 0x9f, 0x6d, 0xc6, 0x2d, 0x8b, 0x23,
	0x9e, 0xd3, 0xcf, 0x10, 0xbc, 0x1f, 0x60, 0x32, 0xec, 0x16, 0x66, 0x80, 0xd2, 0x88, 0xc4, 0x25,
	0x96, 0x8f, 0xdb, 0x83, 0xa6, 0x51, 0x43, 0x94, 0x93, 0x87, 0x95, 0x80, 0x3c, 0x82, 0xcd, 0x0c,
	0xcd, 0x40, 0xf1, 0xae, 0x96, 0xc1, 0x9a, 0x8b, 0xfc, 0x25, 0xe8, 0x77, 0xd8, 0xbb, 0x46, 0x73,
	0x35, 0x46, 0x69, 0x62, 0x4c, 0x94, 0xe6, 0x79, 0xed, 0x95, 0x0b, 0x99, 0xa0, 0xf3, 0xf2, 0xe3,
	0x12, 0x90, 0x17, 0xd0, 0x4c, 0x45, 0x26, 0x8c, 0xf3, 0xf9, 0xef, 0xfc, 0xa0, 0x53, 0xb5, 0xe5,
	0x46, 0x5b, 0x5a, 0x8c, 0x31, 0x92, 0xe6, 0xe2, 0x3c, 0x2e, 0x55, 0xf4, 0x35, 0xec, 0xcf, 0x99,
	0x4f, 0x0a, 0x0c, 0xa0, 0xa5, 0x4b, 0xc2, 0xf9, 0x6f, 0xc5, 0x15, 0xa4, 0xbf, 0x3d, 0x58, 0xff,
	0x9a, 0xa3, 0x26, 0x3b, 0xb0, 0x56, 0xb7, 0x6d, 0x4d, 0x70, 0xfb, 0x42, 0x98, 0x31, 0x91, 0x4e,
	0x4a, 0x28, 0x01, 0x39, 0x85, 0x1d, 0x2c, 0x52, 0xd6, 0xed, 0x6b, 0x44, 0x7e, 0xc9, 0x0c, 0x06,
	0xbe, 0x0b, 0xcf, 0xb1, 0xb6, 0x09, 0x63, 0x96, 0x0a, 0x7e, 0x55, 0xa4, 0x2c, 0x58, 0x2f, 0x9b,
	0x50, 0x13, 0x24, 0x84, 0xb6, 0x1d, 0x8c, 0x64, 0x19, 0x06, 0x4d, 0x17, 0xac, 0x31, 0x39, 0x02,
	0xb0, 0xff, 0x6f, 0x0d, 0x33, 0x45, 0x1e, 0x6c, 0xb8, 0xe8, 0x14, 0x63, 0x9d, 0x2d, 0x8a, 0x55,
	0x8a, 0x79, 0xd0, 0x2a, 0x9d, 0x6b, 0x82, 0x3e, 0x87, 0xdd, 0xba, 0x35, 0xb7, 0x46, 0x0b, 0xd9,
	0xb7, 0x85, 0x8c, 0x59, 0x5a, 0x60, 0x35, 0x25, 0x07, 0xe8, 0x29, 0xec, 0xcc, 0xf6, 0x70, 0x56,
	0xd7, 0xac, 0x74, 0xcf, 0x60, 0xbb, 0xd6, 0xf5, 0x94, 0x4a, 0x67, 0x65, 0xed, 0x65, 0x76, 0xbd,
	0x7b, 0x83, 0xf9, 0xac, 0x6e, 0xab, 0xd2, 0xed, 0x4e, 0xd9, 0x7d, 0x53, 0x82, 0x9f, 0xff, 0xf2,
	0xc1, 0x8f, 0xba, 0x9f, 0xc8, 0x3b, 0x68, 0x5f, 0x22, 0x8e, 0x6e, 0xec, 0x1b, 0x3f, 0x58, 0x1c,
	0xb3, 0xd5, 0x86, 0xc1, 0x22, 0x5f, 0xd6, 0x48, 0x1b, 0x24, 0x82, 0xff, 0x97, 0xec, 0x29, 0x79,
	0x52, 0xa7, 0xac, 0xda, 0xe2, 0x70, 0xbb, 0x96, 0xd8, 0x3d, 0xa0, 0x0d, 0xc2, 0xdd, 0x16, 0x2d,
	0x1e, 0x0b, 0x79, 0x5a, 0x2b, 0x57, 0xdf, 0x60, 0x78, 0xf2, 0x6f, 0x51, 0xb9, 0x90, 0xb4, 0x41,
	0x62, 0xd8, 0x9d, 0xdb, 0x55, 0xf2, 0x78, 0x3a, 0x75, 0xe1, 0x44, 0xc2, 0xa3, 0x55, 0xe1, 0xda,
	0xf3, 0xe3, 0xfc, 0x71, 0xdd, 0x1a, 0x8d, 0x2c, 0x5b, 0xd9, 0xd0, 0x25, 0xf7, 0xe4, 0x86, 0x47,
	0x1b, 0xaf, 0xbc, 0xde, 0x09, 0x1c, 0x26, 0x2a, 0xeb, 0xe4, 0xc3, 0x9f, 0x1d, 0x94, 0xa9, 0xe8,
	0x0f, 0x4c, 0x47, 0xb0, 0xac, 0xca, 0xe8, 0xf9, 0x82, 0x65, 0x37, 0xde, 0x8f, 0x0d, 0xf7, 0x81,
	0xba, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x79, 0x7c, 0xdf, 0xb9, 0x04, 0x00, 0x00,
}
