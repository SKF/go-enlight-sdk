// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iotgrpcapi/grpcapi.proto

/*
Package iotgrpcapi is a generated protocol buffer package.

It is generated from these files:
	iotgrpcapi/grpcapi.proto

It has these top-level messages:
	TaskDescription
	InitialTaskDescription
	TaskUser
	TaskDescriptions
	FunctionalLocationIds
	PrimitiveString
	PrimitiveBool
	PrimitiveVoid
*/
package iotgrpcapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TaskDescription struct {
	UserId                string                 `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	TaskId                string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	TaskName              string                 `protobuf:"bytes,3,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	HierarchyId           string                 `protobuf:"bytes,4,opt,name=hierarchy_id,json=hierarchyId" json:"hierarchy_id,omitempty"`
	DueDateTimestamp      int64                  `protobuf:"varint,5,opt,name=due_date_timestamp,json=dueDateTimestamp" json:"due_date_timestamp,omitempty"`
	IsCompleted           bool                   `protobuf:"varint,6,opt,name=is_completed,json=isCompleted" json:"is_completed,omitempty"`
	FunctionalLocationIds *FunctionalLocationIds `protobuf:"bytes,7,opt,name=functional_location_ids,json=functionalLocationIds" json:"functional_location_ids,omitempty"`
}

func (m *TaskDescription) Reset()                    { *m = TaskDescription{} }
func (m *TaskDescription) String() string            { return proto.CompactTextString(m) }
func (*TaskDescription) ProtoMessage()               {}
func (*TaskDescription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TaskDescription) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TaskDescription) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *TaskDescription) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *TaskDescription) GetHierarchyId() string {
	if m != nil {
		return m.HierarchyId
	}
	return ""
}

func (m *TaskDescription) GetDueDateTimestamp() int64 {
	if m != nil {
		return m.DueDateTimestamp
	}
	return 0
}

func (m *TaskDescription) GetIsCompleted() bool {
	if m != nil {
		return m.IsCompleted
	}
	return false
}

func (m *TaskDescription) GetFunctionalLocationIds() *FunctionalLocationIds {
	if m != nil {
		return m.FunctionalLocationIds
	}
	return nil
}

type InitialTaskDescription struct {
	UserId                string                 `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	TaskName              string                 `protobuf:"bytes,2,opt,name=task_name,json=taskName" json:"task_name,omitempty"`
	HierarchyId           string                 `protobuf:"bytes,3,opt,name=hierarchy_id,json=hierarchyId" json:"hierarchy_id,omitempty"`
	DueDateTimestamp      int64                  `protobuf:"varint,4,opt,name=due_date_timestamp,json=dueDateTimestamp" json:"due_date_timestamp,omitempty"`
	FunctionalLocationIds *FunctionalLocationIds `protobuf:"bytes,5,opt,name=functional_location_ids,json=functionalLocationIds" json:"functional_location_ids,omitempty"`
	ExternalTaskId        string                 `protobuf:"bytes,6,opt,name=external_task_id,json=externalTaskId" json:"external_task_id,omitempty"`
}

func (m *InitialTaskDescription) Reset()                    { *m = InitialTaskDescription{} }
func (m *InitialTaskDescription) String() string            { return proto.CompactTextString(m) }
func (*InitialTaskDescription) ProtoMessage()               {}
func (*InitialTaskDescription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InitialTaskDescription) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *InitialTaskDescription) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *InitialTaskDescription) GetHierarchyId() string {
	if m != nil {
		return m.HierarchyId
	}
	return ""
}

func (m *InitialTaskDescription) GetDueDateTimestamp() int64 {
	if m != nil {
		return m.DueDateTimestamp
	}
	return 0
}

func (m *InitialTaskDescription) GetFunctionalLocationIds() *FunctionalLocationIds {
	if m != nil {
		return m.FunctionalLocationIds
	}
	return nil
}

func (m *InitialTaskDescription) GetExternalTaskId() string {
	if m != nil {
		return m.ExternalTaskId
	}
	return ""
}

type TaskUser struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
}

func (m *TaskUser) Reset()                    { *m = TaskUser{} }
func (m *TaskUser) String() string            { return proto.CompactTextString(m) }
func (*TaskUser) ProtoMessage()               {}
func (*TaskUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TaskUser) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TaskUser) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type TaskDescriptions struct {
	TaskDescriptionArr []*TaskDescription `protobuf:"bytes,1,rep,name=task_description_arr,json=taskDescriptionArr" json:"task_description_arr,omitempty"`
}

func (m *TaskDescriptions) Reset()                    { *m = TaskDescriptions{} }
func (m *TaskDescriptions) String() string            { return proto.CompactTextString(m) }
func (*TaskDescriptions) ProtoMessage()               {}
func (*TaskDescriptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TaskDescriptions) GetTaskDescriptionArr() []*TaskDescription {
	if m != nil {
		return m.TaskDescriptionArr
	}
	return nil
}

type FunctionalLocationIds struct {
	IdArr []string `protobuf:"bytes,1,rep,name=id_arr,json=idArr" json:"id_arr,omitempty"`
}

func (m *FunctionalLocationIds) Reset()                    { *m = FunctionalLocationIds{} }
func (m *FunctionalLocationIds) String() string            { return proto.CompactTextString(m) }
func (*FunctionalLocationIds) ProtoMessage()               {}
func (*FunctionalLocationIds) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *FunctionalLocationIds) GetIdArr() []string {
	if m != nil {
		return m.IdArr
	}
	return nil
}

type PrimitiveString struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *PrimitiveString) Reset()                    { *m = PrimitiveString{} }
func (m *PrimitiveString) String() string            { return proto.CompactTextString(m) }
func (*PrimitiveString) ProtoMessage()               {}
func (*PrimitiveString) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PrimitiveString) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type PrimitiveBool struct {
	Value bool `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *PrimitiveBool) Reset()                    { *m = PrimitiveBool{} }
func (m *PrimitiveBool) String() string            { return proto.CompactTextString(m) }
func (*PrimitiveBool) ProtoMessage()               {}
func (*PrimitiveBool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PrimitiveBool) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type PrimitiveVoid struct {
}

func (m *PrimitiveVoid) Reset()                    { *m = PrimitiveVoid{} }
func (m *PrimitiveVoid) String() string            { return proto.CompactTextString(m) }
func (*PrimitiveVoid) ProtoMessage()               {}
func (*PrimitiveVoid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterType((*TaskDescription)(nil), "iotgrpcapi.TaskDescription")
	proto.RegisterType((*InitialTaskDescription)(nil), "iotgrpcapi.InitialTaskDescription")
	proto.RegisterType((*TaskUser)(nil), "iotgrpcapi.TaskUser")
	proto.RegisterType((*TaskDescriptions)(nil), "iotgrpcapi.TaskDescriptions")
	proto.RegisterType((*FunctionalLocationIds)(nil), "iotgrpcapi.FunctionalLocationIds")
	proto.RegisterType((*PrimitiveString)(nil), "iotgrpcapi.PrimitiveString")
	proto.RegisterType((*PrimitiveBool)(nil), "iotgrpcapi.PrimitiveBool")
	proto.RegisterType((*PrimitiveVoid)(nil), "iotgrpcapi.PrimitiveVoid")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for IoT service

type IoTClient interface {
	DeepPing(ctx context.Context, in *PrimitiveVoid, opts ...grpc.CallOption) (*PrimitiveString, error)
	CreateTask(ctx context.Context, in *InitialTaskDescription, opts ...grpc.CallOption) (*PrimitiveString, error)
	GetAllTasks(ctx context.Context, in *PrimitiveString, opts ...grpc.CallOption) (*TaskDescriptions, error)
	GetUncompletedTasks(ctx context.Context, in *PrimitiveString, opts ...grpc.CallOption) (*TaskDescriptions, error)
	SetTaskCompleted(ctx context.Context, in *TaskUser, opts ...grpc.CallOption) (*PrimitiveVoid, error)
	DeleteTask(ctx context.Context, in *TaskUser, opts ...grpc.CallOption) (*PrimitiveVoid, error)
}

type ioTClient struct {
	cc *grpc.ClientConn
}

func NewIoTClient(cc *grpc.ClientConn) IoTClient {
	return &ioTClient{cc}
}

func (c *ioTClient) DeepPing(ctx context.Context, in *PrimitiveVoid, opts ...grpc.CallOption) (*PrimitiveString, error) {
	out := new(PrimitiveString)
	err := grpc.Invoke(ctx, "/iotgrpcapi.IoT/DeepPing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) CreateTask(ctx context.Context, in *InitialTaskDescription, opts ...grpc.CallOption) (*PrimitiveString, error) {
	out := new(PrimitiveString)
	err := grpc.Invoke(ctx, "/iotgrpcapi.IoT/CreateTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetAllTasks(ctx context.Context, in *PrimitiveString, opts ...grpc.CallOption) (*TaskDescriptions, error) {
	out := new(TaskDescriptions)
	err := grpc.Invoke(ctx, "/iotgrpcapi.IoT/GetAllTasks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) GetUncompletedTasks(ctx context.Context, in *PrimitiveString, opts ...grpc.CallOption) (*TaskDescriptions, error) {
	out := new(TaskDescriptions)
	err := grpc.Invoke(ctx, "/iotgrpcapi.IoT/GetUncompletedTasks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) SetTaskCompleted(ctx context.Context, in *TaskUser, opts ...grpc.CallOption) (*PrimitiveVoid, error) {
	out := new(PrimitiveVoid)
	err := grpc.Invoke(ctx, "/iotgrpcapi.IoT/SetTaskCompleted", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ioTClient) DeleteTask(ctx context.Context, in *TaskUser, opts ...grpc.CallOption) (*PrimitiveVoid, error) {
	out := new(PrimitiveVoid)
	err := grpc.Invoke(ctx, "/iotgrpcapi.IoT/DeleteTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for IoT service

type IoTServer interface {
	DeepPing(context.Context, *PrimitiveVoid) (*PrimitiveString, error)
	CreateTask(context.Context, *InitialTaskDescription) (*PrimitiveString, error)
	GetAllTasks(context.Context, *PrimitiveString) (*TaskDescriptions, error)
	GetUncompletedTasks(context.Context, *PrimitiveString) (*TaskDescriptions, error)
	SetTaskCompleted(context.Context, *TaskUser) (*PrimitiveVoid, error)
	DeleteTask(context.Context, *TaskUser) (*PrimitiveVoid, error)
}

func RegisterIoTServer(s *grpc.Server, srv IoTServer) {
	s.RegisterService(&_IoT_serviceDesc, srv)
}

func _IoT_DeepPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrimitiveVoid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).DeepPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iotgrpcapi.IoT/DeepPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).DeepPing(ctx, req.(*PrimitiveVoid))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitialTaskDescription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iotgrpcapi.IoT/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).CreateTask(ctx, req.(*InitialTaskDescription))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetAllTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrimitiveString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetAllTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iotgrpcapi.IoT/GetAllTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetAllTasks(ctx, req.(*PrimitiveString))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_GetUncompletedTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrimitiveString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).GetUncompletedTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iotgrpcapi.IoT/GetUncompletedTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).GetUncompletedTasks(ctx, req.(*PrimitiveString))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_SetTaskCompleted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).SetTaskCompleted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iotgrpcapi.IoT/SetTaskCompleted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).SetTaskCompleted(ctx, req.(*TaskUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _IoT_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IoTServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iotgrpcapi.IoT/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IoTServer).DeleteTask(ctx, req.(*TaskUser))
	}
	return interceptor(ctx, in, info, handler)
}

var _IoT_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iotgrpcapi.IoT",
	HandlerType: (*IoTServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeepPing",
			Handler:    _IoT_DeepPing_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _IoT_CreateTask_Handler,
		},
		{
			MethodName: "GetAllTasks",
			Handler:    _IoT_GetAllTasks_Handler,
		},
		{
			MethodName: "GetUncompletedTasks",
			Handler:    _IoT_GetUncompletedTasks_Handler,
		},
		{
			MethodName: "SetTaskCompleted",
			Handler:    _IoT_SetTaskCompleted_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _IoT_DeleteTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iotgrpcapi/grpcapi.proto",
}

func init() { proto.RegisterFile("iotgrpcapi/grpcapi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 538 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x6d, 0x9a, 0xb5, 0x6b, 0x6f, 0x7f, 0x3f, 0x5a, 0x99, 0x96, 0x85, 0x96, 0x87, 0x2e, 0x12,
	0x22, 0x0f, 0xa8, 0x48, 0xe5, 0x15, 0x09, 0x8d, 0x15, 0xa6, 0x20, 0xfe, 0x4c, 0x59, 0x87, 0xc4,
	0x53, 0x64, 0xe2, 0xbb, 0xcd, 0x6a, 0x12, 0x47, 0xb6, 0x3b, 0xc1, 0xf7, 0xe1, 0x9d, 0x2f, 0xc1,
	0x07, 0x43, 0x4e, 0xdb, 0xf4, 0x8f, 0xba, 0x6e, 0x13, 0x3c, 0xc5, 0x3e, 0xe7, 0xdc, 0x1b, 0x9f,
	0x93, 0x1b, 0x83, 0xc3, 0x85, 0xbe, 0x94, 0x59, 0x44, 0x33, 0xfe, 0x62, 0xfe, 0x1c, 0x64, 0x52,
	0x68, 0x41, 0x60, 0xc9, 0xb8, 0xbf, 0xca, 0xd0, 0x1c, 0x53, 0x35, 0x19, 0xa1, 0x8a, 0x24, 0xcf,
	0x34, 0x17, 0x29, 0x39, 0x80, 0xfd, 0xa9, 0x42, 0x19, 0x72, 0xe6, 0x58, 0x7d, 0xcb, 0xab, 0x07,
	0x55, 0xb3, 0xf5, 0x99, 0x21, 0x34, 0x55, 0x13, 0x43, 0x94, 0x67, 0x84, 0xd9, 0xfa, 0x8c, 0xf4,
	0xa0, 0x9e, 0x13, 0x29, 0x4d, 0xd0, 0xb1, 0x73, 0xaa, 0x66, 0x80, 0x4f, 0x34, 0x41, 0x72, 0x08,
	0xff, 0x5d, 0x71, 0x94, 0x54, 0x46, 0x57, 0x3f, 0x4c, 0xe9, 0x5e, 0xce, 0x37, 0x0a, 0xcc, 0x67,
	0xe4, 0x39, 0x10, 0x36, 0xc5, 0x90, 0x51, 0x8d, 0xa1, 0xe6, 0x09, 0x2a, 0x4d, 0x93, 0xcc, 0xa9,
	0xf4, 0x2d, 0xcf, 0x0e, 0x5a, 0x6c, 0x8a, 0x23, 0xaa, 0x71, 0xbc, 0xc0, 0x4d, 0x43, 0xae, 0xc2,
	0x48, 0x24, 0x59, 0x8c, 0x1a, 0x99, 0x53, 0xed, 0x5b, 0x5e, 0x2d, 0x68, 0x70, 0x75, 0xbc, 0x80,
	0xc8, 0x57, 0x38, 0xb8, 0x98, 0xa6, 0x91, 0xb1, 0x43, 0xe3, 0x30, 0x16, 0x11, 0x35, 0xcb, 0x90,
	0x33, 0xe5, 0xec, 0xf7, 0x2d, 0xaf, 0x31, 0x3c, 0x1c, 0x2c, 0x43, 0x18, 0xbc, 0x2b, 0xa4, 0x1f,
	0xe6, 0x4a, 0x9f, 0xa9, 0xa0, 0x73, 0xb1, 0x0d, 0x76, 0x7f, 0x96, 0xe1, 0x91, 0x9f, 0x72, 0xcd,
	0x69, 0x7c, 0xe7, 0xe0, 0xd6, 0xf2, 0x29, 0xdf, 0x92, 0x8f, 0x7d, 0xd7, 0x7c, 0xf6, 0x6e, 0xc8,
	0x67, 0x87, 0xf9, 0xca, 0xdf, 0x99, 0x27, 0x1e, 0xb4, 0xf0, 0xbb, 0x46, 0x69, 0x1a, 0x2f, 0x46,
	0xa1, 0x9a, 0x9f, 0xf7, 0xc1, 0x02, 0x1f, 0xe7, 0x23, 0xe1, 0xbe, 0x82, 0x9a, 0x59, 0x9d, 0x2b,
	0x94, 0xf7, 0x1f, 0x28, 0x97, 0x42, 0x6b, 0x23, 0x5c, 0x45, 0x3e, 0x42, 0x3b, 0x17, 0xb3, 0x25,
	0x18, 0x52, 0x29, 0x1d, 0xab, 0x6f, 0x7b, 0x8d, 0x61, 0x6f, 0xd5, 0xd3, 0x46, 0x6d, 0x40, 0xf4,
	0x3a, 0x70, 0x24, 0xa5, 0x3b, 0x80, 0xce, 0x56, 0xeb, 0xa4, 0x03, 0x55, 0xce, 0x8a, 0xce, 0xf5,
	0xa0, 0xc2, 0x99, 0xd1, 0x3f, 0x83, 0xe6, 0xa9, 0xe4, 0x09, 0xd7, 0xfc, 0x1a, 0xcf, 0xb4, 0xe4,
	0xe9, 0x25, 0x69, 0x43, 0xe5, 0x9a, 0xc6, 0x53, 0x9c, 0xbb, 0x9a, 0x6d, 0xdc, 0xa7, 0xf0, 0x7f,
	0x21, 0x7c, 0x23, 0x44, 0xbc, 0x2e, 0xab, 0x2d, 0x64, 0xcd, 0x15, 0xd9, 0x17, 0xc1, 0xd9, 0xf0,
	0xb7, 0x0d, 0xb6, 0x2f, 0xc6, 0x64, 0x04, 0xb5, 0x11, 0x62, 0x76, 0x6a, 0xde, 0xf0, 0x78, 0xd5,
	0xd5, 0x9a, 0xbc, 0xdb, 0xdb, 0x4a, 0xcd, 0x4e, 0xe6, 0x96, 0xc8, 0x67, 0x80, 0x63, 0x89, 0x66,
	0x2e, 0xa8, 0x9a, 0x10, 0x77, 0x55, 0xbc, 0x7d, 0x7a, 0x6f, 0x6b, 0xf8, 0x1e, 0x1a, 0x27, 0xa8,
	0x8f, 0xe2, 0xbc, 0x4e, 0x91, 0x5d, 0xea, 0xee, 0x93, 0x1d, 0x1f, 0x43, 0xb9, 0x25, 0x12, 0xc0,
	0xc3, 0x13, 0xd4, 0xe7, 0x69, 0xf1, 0x0f, 0xff, 0x83, 0x9e, 0x6f, 0xa1, 0x75, 0x86, 0xda, 0x10,
	0xcb, 0x6b, 0xa0, 0xbd, 0x59, 0x63, 0xc6, 0xb1, 0x7b, 0x73, 0xa8, 0x6e, 0x89, 0xbc, 0x06, 0x18,
	0xa1, 0xa9, 0xce, 0x73, 0xbb, 0x7f, 0x83, 0x6f, 0xd5, 0xfc, 0x92, 0x7d, 0xf9, 0x27, 0x00, 0x00,
	0xff, 0xff, 0xe0, 0x0d, 0x81, 0xf6, 0x80, 0x05, 0x00, 0x00,
}
